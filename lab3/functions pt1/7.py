def has_33(nums):
    for i in range(len(nums) - 1):
        if nums[i] == 3 and nums[i + 1] == 3:
            return True
    return False

# Examples of using the function:
result1 = has_33([1, 3, 3])
print(result1)  # Output: True

result2 = has_33([1, 3, 1, 3])
print(result2)  # Output: False

result3 = has_33([3, 1, 3])
print(result3)  # Output: False


'''Ниже представлена функция на Python под названием has_33, которая принимает список целых чисел и возвращает `True`, 
если в массиве есть число 3 рядом с другим числом 3:

1. Определена функция has_33 с параметром nums, представляющим список целых чисел.
2. В цикле for перебираются элементы списка, за исключением последнего.
3. Для каждой пары соседних элементов проверяется, являются ли они оба равными 3.
4. Если найдена пара чисел 3 рядом, функция возвращает `True`.
5. Если цикл завершился без нахождения пары чисел 3 рядом, функция возвращает `False`.

Примеры использования функции:
result1 = has_33([1, 3, 3])
print(result1)  # Вывод: True

result2 = has_33([1, 3, 1, 3])
print(result2)  # Вывод: False

result3 = has_33([3, 1, 3])
print(result3)  # Вывод: False
Эта функция проверяет наличие пары чисел 3 рядом в массиве и возвращает True,
если такая пара обнаружена, и False в противном случае.'''